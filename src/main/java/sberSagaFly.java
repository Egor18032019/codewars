public class sberSagaFly {

    public static void main(String[] args) {
        int as = brokenDevice(5, 16);
        System.out.println(as);
    }

    //    x - начальное число, x > 0
//    y - число, которое необходимо получить, y > 0
    public static int brokenDevice(int x, int y) {
        if (x == y) return 0;
        if (x > y) return x - y;
        if ((x - 1) * 2 == y) return 2;
        if (x * 2 - 1 == y) return 2;
        if (y % 2 == 0) {
            return brokenDevice(x, y / 2) + 1;
        } else {
            return brokenDevice(x, y + 1) + 1;
        }


        // – Так, кто там будет это править - кажется я напортачил, беру парашют и прыгаю, всем пока
    }

    public static int brokenDeviceOld(int x, int y) {
        int ans = 0;

        while (y > x) {

            if (y % 2 == 0) {
                y /= 2;
            } else {
                y += 1;
            }
            ans++;
        }

        return ans + (x - y);
    }
}

/*
Выстрел радио-пушки AntiDron4000 спровоцировал отключение бортовых систем. И всё бы ничего, но ПО, запускающее двигатели, выдаёт ошибку!
Остался только резервный вариометр доапокалиптических времен, на дисплее которого отображается число, которое необходимо изменить. Но из-за поломок мы можем в любом порядке выполнять только следующие операции:

    удвоение: умножить число на дисплее на 2
    уменьшение: вычесть 1 из числа на дисплее

Первоначально на дисплее отображается число x.
Время ограничено, надо спешить!
Напишите функцию, которая возвращает минимальное количество операций, необходимых для преобразования начального числа x в число y.

На входе:

    x - начальное число, x > 0
    y - число, которое необходимо получить, y > 0

На выходе: число - минимальное число операций

Пример:

x = 2
y = 3
brokenDevice( x, y )  --> 2

Минимальный набор состоит из двух операций: удвоение и уменьшение {2 -> 4 -> 3}.
 */